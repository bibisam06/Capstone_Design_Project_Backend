name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - filter
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 소스 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # PEM 키 설정
      - name: Configure PEM Key
        env:
          PEM_KEY_BASE64: ${{ secrets.SSH_KEY }}
        run: |
          echo "$PEM_KEY_BASE64" | base64 --decode > dobee-web.pem
          chmod 400 dobee-web.pem

      # JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      # Gradle 설정
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4.0.0

      # Gradle 실행 권한 부여 및 빌드
      - name: Grant Gradle Permission and Build
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      # Keystore 파일 디코딩 및 저장
      - name: Decode and Save Keystore File
        env:
          KEYSTORE_BASE64: ${{ secrets.EC2_KEY }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > keystore.p12

      # Docker 이미지 빌드
      - name: Build Docker Image
        run: docker build -t dobee/backend:latest .

      # Docker 이미지 푸시
      - name: Push Docker Image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push dobee/backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # 서버로 배포
      - name: Deploy Application
        run: |
          ssh -i dobee-web.pem ubuntu@<your-server-ip> << EOF
          docker pull dobee/backend:latest
          docker stop dobee_backend || true
          docker rm dobee_backend || true
          docker run -d --name dobee_backend -p 8080:8080 dobee/backend:latest
          EOF
